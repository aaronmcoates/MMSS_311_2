low = "white",
high = "purple", limits=c(.00001,1)) + scale_fill_manual(values = c('0' = "#E08214"))
ggplot(StateTable, aes(Clusters, State))+
geom_raster(aes(fill = Prop)) + scale_fill_gradient(
low = "white",
high = "purple", limits=c(.00001,1))
ggplot(StateTable, aes(Clusters, State, fill=cut(Prop, c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1))))
ggplot(StateTable, aes(Clusters, State, fill=cut(Prop, c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)))) +
geom_raster(aes(fill = Prop))
ggplot(StateTable, aes(Clusters, State, fill=cut(Prop, c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)))) +
geom_raster()
ggplot(StateTable, aes(Clusters, State, fill=cut(Prop, c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)))) +
geom_raster()
ggplot(StateTable, aes(Clusters, State, fill=cut(Prop, c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)))) +
geom_raster()
View(StateTable)
ggplot(StateTable, aes(Clusters, State, fill=cut(Prop, c(0,.01,.1,.2,.3,.4,.5,.6,.7,.8,.9,.99,1)))) +
geom_raster()
ggplot(StateTable, aes(Clusters, State, fill=cut(Prop, c(0,.01,.1,.2,.3,.4,.5,.6,.7,.8,.9,.99,1), include.lowest = TRUE))) +
geom_raster()
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(0,.01,.1,.2,.3,.4,.5,.6,.7,.8,.9,.99,1), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(type="seq",palette = "YlGn")
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(0,.01,.1,.2,.3,.4,.5,.6,.7,.8,.9,.99,1), include.lowest = TRUE))) +
geom_raster() + scale_fill_gradient(low="white", high="purple")
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(0,.01,.1,.2,.3,.4,.5,.6,.7,.8,.9,.99,1), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(palette="RdBu")
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(0,.01,.1,.2,.3,.4,.5,.6,.7,.8,.9,.99,1), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(palette="RdBu")
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(0,.01,.1,.2,.3,.4,.5,.6,.7,.8,.9,.99,1), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(palette="RdBu")
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(0,.0001,.1,.2,.3,.4,.5,.6,.7,.8,.9,.9999,1), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(palette="RdBu")
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(0,.0001,.1,.2,.3,.4,.5,.6,.7,.8,.9,1), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(palette="RdBu")
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(0,.0001,.1,.2,.3,.4,.5,.6,.7,.8,.9,1), include.lowest = TRUE))) +
geom_raster() + scale_fill_hue()
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(0,.0001,.1,.2,.3,.4,.5,.6,.7,.8,.9,1), include.lowest = TRUE))) +
geom_raster() + scale_fill_gradientn()
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(0,.0001,.1,.2,.3,.4,.5,.6,.7,.8,.9,1), include.lowest = TRUE))) +
geom_raster() + scale_fill_gradientn(low = "#132B43", high = "#56B1F7")
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(0,.0001,.1,.2,.3,.4,.5,.6,.7,.8,.9,1), include.lowest = TRUE))) +
geom_raster() + scale_fill_gradientn(colours='blue')
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(0,.0001,.1,.2,.3,.4,.5,.6,.7,.8,.9,1), include.lowest = TRUE))) +
geom_raster() + scale_color_brewer()
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(0,.0001,.1,.2,.3,.4,.5,.6,.7,.8,.9,1), include.lowest = TRUE))) +
geom_raster() + scale_color_brewer('#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd')
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(0,.0001,.2,.4,.6,.8,1), include.lowest = TRUE))) +
geom_raster() + scale_color_brewer(palette = "YlOrRd")
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(0,.0001,.2,.4,.6,.8,1), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(palette = "YlOrRd")
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(0,.0001,.125,.25,.375,.5,.625,.75,.875,1), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(palette = "YlOrRd")
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(1, .875, .75, .625, .5, .375, .25, .125, .0001, 0), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(palette = "YlOrRd")
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(1, .875, .75, .625, .5, .375, .25, .125, .0001, 0), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(palette = "YlOrRd", direction=-1)
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(1, .875, .75, .625, .5, .375, .25, .125, .0001, 0), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(palette = "Purples", direction=-1)
fill=cut(Prop, c(1, .875, .75, .625, .5, .375, .25, .125, .0001, 0), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(palette = "Purples", direction=-1) + guides(fill=guide_legend(title="Legend!"))
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(1, .875, .75, .625, .5, .375, .25, .125, .0001, 0), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(palette = "Purples", direction=-1) +
guides(fill=guide_legend(title="Legend!"))
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(1, .875, .75, .625, .5, .375, .25, .125, .0001, 0), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(palette = "Purples", direction=-1) +
guides(fill=guide_legend(title="Proportion")) +
scale_x_continuous(expand=c(0,0)) + scale_y_continuous(expand=c(0,0))
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(1, .875, .75, .625, .5, .375, .25, .125, .0001, 0), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(palette = "Purples", direction=-1) +
guides(fill=guide_legend(title="Proportion"))
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(1, .875, .75, .625, .5, .375, .25, .125, .0001, 0),
labels = c("0", "(0,.125]", "(.125, .25]", "(.25, .375]", "(.375, .5]",
"(.5, .625]", "(.625, .75]", "(.75, .875]", "(.875, 1]"), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(palette = "Purples", direction=-1) +
guides(fill=guide_legend(title="Proportion"))
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(1, .875, .75, .625, .5, .375, .25, .125, .0001, 0),
labels = c("0", "(0,.125]", "(.125, .25]", "(.25, .375]", "(.375, .5]",
"(.5, .625]", "(.625, .75]", "(.75, .875]", "(.875, 1]"), include.lowest = TRUE))) +
geom_raster() + scale_fill_brewer(palette = "Purples", direction=-1) +
guides(fill=guide_legend(title="Proportion of State")) + title(main='State County Proportion per Cluster')
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(1, .875, .75, .625, .5, .375, .25, .125, .0001, 0),
labels = c("0", "(0,.125]", "(.125, .25]", "(.25, .375]", "(.375, .5]",
"(.5, .625]", "(.625, .75]", "(.75, .875]", "(.875, 1]"), include.lowest = TRUE))) +
geom_tile() + scale_fill_brewer(palette = "Purples", direction=-1) +
guides(fill=guide_legend(title="Proportion of State")) + ggtitle('State County Proportion per Cluster')
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(1, .875, .75, .625, .5, .375, .25, .125, .0001, 0),
labels = c("0", "(0,.125]", "(.125, .25]", "(.25, .375]", "(.375, .5]",
"(.5, .625]", "(.625, .75]", "(.75, .875]", "(.875, 1]"), include.lowest = TRUE))) +
geom_tile() + scale_fill_brewer(palette = "BuGn", direction=-1) +
guides(fill=guide_legend(title="Proportion of State")) + ggtitle('State County Proportion per Cluster')
setwd("/Users/aaroncoates/Documents/GitHub/MMSS_311_2")
library(tidytext)
library(tm)
library(readr)
library(dplyr)
library(stringr)
library(ggplot2)
library(proxy)
library(fields)
library(mixtools)
library(xml2)
library(rvest)
library(maps)
library(mapdata)
library(devtools)
library(ggmap)
library(tidyr)
library(RColorBrewer)
USAData <- read_csv('/Users/aaroncoates/Desktop/ML Final/DataUSA Health and Safety.csv')
GoodVars <- c(1, 7, 12, 17, 22)
USAData <- USAData[ ,GoodVars]
usanames <- c("FIPS", "Obesity", "Smoking", "AirPol", "Crime")
names(USAData) <- usanames
USAData$FIPS <- gsub("^.*US", "", USAData$FIPS) %>%
as.numeric()
MedHouseInc <- read_csv('/Users/aaroncoates/Desktop/ML Final/MedHousInc.csv')
MedHouseInc <- MedHouseInc[, 1:3]
HSDiploma <- read_csv('/Users/aaroncoates/Desktop/ML Final/HSDiploma.csv')
HSDiploma <- HSDiploma[, 2:3]
WhitePop <- read_csv('/Users/aaroncoates/Desktop/ML Final/WhitePop.csv')
WhitePop <- WhitePop[,2:3]
FamHouseholds <- read_csv('/Users/aaroncoates/Desktop/ML Final/FamHouseholds.csv')
FamHouseholds <- FamHouseholds[,2:3]
UnempRate <- read_csv('/Users/aaroncoates/Desktop/ML Final/UnempRate.csv')
UnempRate <- UnempRate[,2:3]
StatsAmerica <- inner_join(MedHouseInc, HSDiploma, "FIPS Code") %>%
inner_join(WhitePop, "FIPS Code") %>%
inner_join(FamHouseholds, "FIPS Code") %>%
inner_join(UnempRate, "FIPS Code")
statnames <- c("County", "FIPS", "MedHousInc", "HSDipl", "White", "FamHous", "UnempRate")
names(StatsAmerica) <- statnames
DataSet <- inner_join(StatsAmerica, USAData, "FIPS")
sum(is.na(DataSet$MedHousInc))
sum(is.na(DataSet$HSDipl))
sum(is.na(DataSet$White))
sum(is.na(DataSet$FamHous))
sum(is.na(DataSet$UnempRate))
sum(is.na(DataSet$Obesity))
sum(is.na(DataSet$Smoking))
sum(is.na(DataSet$AirPol))
sum(is.na(DataSet$Crime))
FillAirPol <- mean(DataSet$AirPol, na.rm=TRUE)
DataSet$AirPol[is.na(DataSet$AirPol)] <- FillAirPol
FillCrime <- mean(DataSet$Crime, na.rm=TRUE)
DataSet$Crime[is.na(DataSet$Crime)] <- FillCrime
DataSet <- apply(DataSet, 2, function(x) gsub("[$,%]", "", x)) %>%
as.data.frame()
VarsOnly <- DataSet[3:11] %>%
apply(2, as.numeric)
scaledVars <- scale(VarsOnly) %>%
as.data.frame()
set.seed(100)
WCSS <- numeric(30)
for (i in 1:30){
km <- kmeans(scaledVars, i, nstart=100)
WCSS[i] <- km$tot.withinss
}
WCSS<- as.data.frame(WCSS)
WCSS$k <- c(1:30)
ggplot(WCSS, aes(k, WCSS)) + geom_line() + geom_point() +
ggtitle("Elbow Plot") + xlab("Number of Clusters") +
ylab("Within-Cluster Sum of Squares")
KMeans <- kmeans(scaledVars, 20, nstart=100)
DataSet$Clusters <-KMeans$cluster %>%
as.factor()
GraphData <- DataSet[ ,c(1, 12)]
GraphNames <- c("subregion", "cluster")
names(GraphData) <- GraphNames
USA <- map_data("usa")
Counties <- map_data("county")
GraphData$subregion <- as.character(tolower(gsub(" County ..$", "", GraphData$subregion)))
Counties$subregion <- as.character(Counties$subregion)
FinalGraph <- inner_join(GraphData, Counties, 'subregion')
ggplot(data = FinalGraph, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) + geom_polygon(data = USA, aes(x=long, y = lat, group = group)) +
geom_polygon(data = FinalGraph, aes(fill = cluster), color = "black", size=.05) +
theme_bw() + scale_fill_brewer(palette="Spectral")
Centers <- as.matrix(KMeans$centers)
DataSet %>%
group_by(Clusters) %>%
count()
DataSet$State <- str_sub(DataSet$County, -2, -1)
table(DataSet$State, DataSet$Clusters)
StateTable <- DataSet %>%
group_by(State, Clusters) %>%
count()
StateTable$Clusters <- as.integer(StateTable$Clusters)
StateTable <- StateTable %>%
group_by(State) %>%
complete(Clusters = seq(1, 20), fill=list(n=0))
StateTable$Clusters <- as.factor(StateTable$Clusters)
StateMatrix <- spread(StateTable, key = "State", value = "n") %>%
as.data.frame()
StateMatrix <- StateMatrix[ ,2:52]
StateMatrix[is.na(StateMatrix)] <- 0
CountyTotals <- colSums(StateMatrix) %>%
as.data.frame()
colnames(CountyTotals) <- 'Total'
CountyTotals$State <- rownames(CountyTotals)
StateTable <- inner_join(StateTable, CountyTotals, 'State')
StateTable$Prop <- StateTable$n / StateTable$Total
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(1, .875, .75, .625, .5, .375, .25, .125, .0001, 0),
labels = c("0", "(0,.125]", "(.125, .25]", "(.25, .375]", "(.375, .5]",
"(.5, .625]", "(.625, .75]", "(.75, .875]", "(.875, 1]"), include.lowest = TRUE))) +
geom_tile() + scale_fill_brewer(palette = "BuGn", direction=-1) +
guides(fill=guide_legend(title="Proportion of State")) + ggtitle('State County Proportion per Cluster')
ggplot(data = FinalGraph, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) + geom_polygon(data = USA, aes(x=long, y = lat, group = group)) +
geom_polygon(data = FinalGraph, aes(fill = cluster), color = "black", size=.05) +
theme_bw() + scale_fill_brewer(palette="Spectral")
ggplot(data = FinalGraph, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) + geom_polygon(data = USA, aes(x=long, y = lat, group = group)) +
geom_polygon(data = FinalGraph, aes(fill = cluster), color = "black", size=.05) +
theme_bw()
View(Centers)
ggplot(WCSS, aes(k, WCSS)) + geom_line() + geom_point() +
ggtitle("Elbow Plot") + xlab("Number of Clusters") +
ylab("Within-Cluster Sum of Squares")
KMeans <- kmeans(scaledVars, 12, nstart=100)
DataSet$Clusters <-KMeans$cluster %>%
as.factor()
GraphData <- DataSet[ ,c(1, 12)]
GraphNames <- c("subregion", "cluster")
names(GraphData) <- GraphNames
USA <- map_data("usa")
Counties <- map_data("county")
GraphData$subregion <- as.character(tolower(gsub(" County ..$", "", GraphData$subregion)))
Counties$subregion <- as.character(Counties$subregion)
FinalGraph <- inner_join(GraphData, Counties, 'subregion')
ggplot(data = FinalGraph, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) + geom_polygon(data = USA, aes(x=long, y = lat, group = group)) +
geom_polygon(data = FinalGraph, aes(fill = cluster), color = "black", size=.05) +
theme_bw() + scale_fill_brewer(palette="Spectral")
View(USA)
Alaska <- map_data('alaska')
Alaska <- map_data("alaska")
Alaska <- map_data(state('alaska'))
Alaska <- map_data('state')
View(Alaska)
ggplot(data = FinalGraph, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) + geom_polygon(data = USA, aes(x=long, y = lat, group = group)) +
geom_polygon(data = FinalGraph, aes(fill = cluster), color = "black", size=.05) +
theme_bw() + scale_fill_brewer(palette="Spectral")
View(Counties)
Centers <- as.matrix(KMeans$centers)
ggplot(data = FinalGraph, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) + geom_polygon(data = USA, aes(x=long, y = lat, group = group)) +
geom_polygon(data = FinalGraph, aes(fill = cluster), color = "black", size=.05) +
theme_bw()
ggplot(data = FinalGraph, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) + geom_polygon(data = USA, aes(x=long, y = lat, group = group)) +
geom_polygon(data = FinalGraph, aes(fill = cluster), color = "black", size=.05) +
theme_bw() + scale_fill_brewer(palette = 'Paired')
ggplot(data = FinalGraph, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) + geom_polygon(data = USA, aes(x=long, y = lat, group = group)) +
geom_polygon(data = FinalGraph, aes(fill = cluster), color = "black", size=.05) +
theme_bw() + scale_fill_brewer(palette = 'Set3')
ggplot(data = FinalGraph, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) + geom_polygon(data = USA, aes(x=long, y = lat, group = group)) +
geom_polygon(data = FinalGraph, aes(fill = cluster), color = "black", size=.05) +
theme_bw() + scale_fill_brewer(palette = 'Paired')
DataSet %>%
group_by(Clusters) %>%
count()
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(1, .875, .75, .625, .5, .375, .25, .125, .0001, 0),
labels = c("0", "(0,.125]", "(.125, .25]", "(.25, .375]", "(.375, .5]",
"(.5, .625]", "(.625, .75]", "(.75, .875]", "(.875, 1]"), include.lowest = TRUE))) +
geom_tile() + scale_fill_brewer(palette = "BuGn", direction=-1) +
guides(fill=guide_legend(title="Proportion of State")) + ggtitle('State County Proportion per Cluster')
KMeans <- kmeans(scaledVars, 12, nstart=100)
DataSet$Clusters <-KMeans$cluster %>%
as.factor()
GraphData <- DataSet[ ,c(1, 12)]
GraphNames <- c("subregion", "cluster")
names(GraphData) <- GraphNames
USA <- map_data("usa")
Counties <- map_data("county")
GraphData$subregion <- as.character(tolower(gsub(" County ..$", "", GraphData$subregion)))
Counties$subregion <- as.character(Counties$subregion)
FinalGraph <- inner_join(GraphData, Counties, 'subregion')
ggplot(data = FinalGraph, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) + geom_polygon(data = USA, aes(x=long, y = lat, group = group)) +
geom_polygon(data = FinalGraph, aes(fill = cluster), color = "black", size=.05) +
theme_bw() + scale_fill_brewer(palette = 'Paired')
Centers <- as.matrix(KMeans$centers)
DataSet %>%
group_by(Clusters) %>%
count()
DataSet$State <- str_sub(DataSet$County, -2, -1)
table(DataSet$State, DataSet$Clusters)
StateTable <- DataSet %>%
group_by(State, Clusters) %>%
count()
StateTable$Clusters <- as.integer(StateTable$Clusters)
StateTable <- StateTable %>%
group_by(State) %>%
complete(Clusters = seq(1, 12), fill=list(n=0))
StateTable$Clusters <- as.factor(StateTable$Clusters)
StateMatrix <- spread(StateTable, key = "State", value = "n") %>%
as.data.frame()
StateMatrix <- StateMatrix[ ,2:52]
StateMatrix[is.na(StateMatrix)] <- 0
CountyTotals <- colSums(StateMatrix) %>%
as.data.frame()
colnames(CountyTotals) <- 'Total'
CountyTotals$State <- rownames(CountyTotals)
StateTable <- inner_join(StateTable, CountyTotals, 'State')
StateTable$Prop <- StateTable$n / StateTable$Total
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(1, .875, .75, .625, .5, .375, .25, .125, .0001, 0),
labels = c("0", "(0,.125]", "(.125, .25]", "(.25, .375]", "(.375, .5]",
"(.5, .625]", "(.625, .75]", "(.75, .875]", "(.875, 1]"), include.lowest = TRUE))) +
geom_tile() + scale_fill_brewer(palette = "BuGn", direction=-1) +
guides(fill=guide_legend(title="Proportion of State")) + ggtitle('State County Proportion per Cluster')
Centers$Cluster <- rownames(Centers)
Centers <- as.matrix(KMeans$centers)
Centers$Clusters <- c(1:12)
Centers <- as.matrix(KMeans$centers)
Centers <- as.data.frame(KMeans$centers)
Centers$Clusters <- c(1:12)
gather(Centers)
gather(Centers, -Clusters)
gather(Centers, k, v, -Clusters)
Centers <- gather(Centers, k, v, -Clusters)
ggplot(Centers, aes(Clusters, Variable)) +
geom_tile()
Centers <- gather(Centers, Variable, Value, -Clusters)
Centers <- as.data.frame(KMeans$centers)
Centers$Clusters <- c(1:12)
Centers <- gather(Centers, Variable, Value, -Clusters)
ggplot(Centers, aes(Clusters, Variable)) +
geom_tile()
Centers <- as.data.frame(KMeans$centers)
Centers$Clusters <- as.factor(c(1:12))
Centers <- gather(Centers, Variable, Value, -Clusters)
ggplot(Centers, aes(Clusters, Variable)) +
geom_tile()
ggplot(Centers, aes(Clusters, Variable)) +
geom_tile(fill=Value)
ggplot(Centers, aes(Clusters, Variable)) +
geom_tile(fill=Centers$Value)
ggplot(Centers, aes(Clusters, Variable)) +
geom_tile(fill=Centers$Value)
ggplot(Centers, aes(Clusters, Variable)) +
geom_raster(fill=Centers$Value)
ggplot(Centers, aes(Clusters, Variable)) +
geom_raster() + scale_fill_brewer(palette = "BuGn", direction=-1)
ggplot(Centers, aes(Clusters, Variable, fill=Value)) +
geom_raster() + scale_fill_brewer(palette = "BuGn", direction=-1)
ggplot(Centers, aes(Clusters, Variable, fill=Value)) +
geom_raster() + scale_fill_gradient(low = "blue", high = "purple")
ggplot(Centers, aes(Clusters, Variable,
fill=cut(Prop, c(-20, -10, -3, -2, -1, -.5, 0, .5, 1, 2, 3, 10, 20)))) +
geom_raster() + scale_fill_brewer(palette = "PiYG")
ggplot(Centers, aes(Clusters, Variable,
fill=cut(Value, c(-20, -10, -3, -2, -1, -.5, 0, .5, 1, 2, 3, 10, 20)))) +
geom_raster() + scale_fill_brewer(palette = "PiYG")
ggplot(Centers, aes(Clusters, Variable,
fill=cut(Value, c(-20, -10, -3, -2, -1, -.5, 0, .5, 1, 2, 3, 10, 20)))) +
geom_raster() + scale_fill_brewer(palette = "PiYG")
DataSet %>%
group_by(Clusters) %>%
count()
ClusterTotals <- DataSet %>%
group_by(Clusters) %>%
count()
View(ClusterTotals)
ggplot(ClusterTotals, aes(Clusters, n)) +
geom_bar(width = 1) + coord_polar("Clusters", start=0)
ggplot(ClusterTotals, aes(Clusters, n)) +
geom_bar(width = 1) + coord_polar("y", start=0)
ggplot(ClusterTotals, aes("", n, fill=Clusters)) +
geom_bar(width = 1) + coord_polar("y", start=0)
ggplot(ClusterTotals, aes("", n, fill=Clusters)) +
geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0)
ggplot(StateTable, aes(Clusters, State,
fill=cut(Prop, c(1, .875, .75, .625, .5, .375, .25, .125, .0001, 0),
labels = c("0", "(0,.125]", "(.125, .25]", "(.25, .375]", "(.375, .5]",
"(.5, .625]", "(.625, .75]", "(.75, .875]", "(.875, 1]"), include.lowest = TRUE))) +
geom_tile() + scale_fill_brewer(palette = "BuGn", direction=-1) +
guides(fill=guide_legend(title="Proportion of State")) + ggtitle('State County Proportion per Cluster')
ggplot(ClusterTotals, aes("", n, fill=Clusters)) +
geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0)
ggplot(Centers, aes(Clusters, Variable,
fill=cut(Value, c(-20, -10, -3, -2, -1, -.5, 0, .5, 1, 2, 3, 10, 20)))) +
geom_raster() + scale_fill_brewer(palette = "PiYG")
guides(fill=guide_legend(title="Proportion of State")) + ggtitle('State County Proportion per Cluster')
ggplot(Centers, aes(Clusters, Variable,
fill=cut(Value, c(-20, -10, -3, -2, -1, -.5, 0, .5, 1, 2, 3, 10, 20)))) +
geom_raster() + scale_fill_brewer(palette = "PiYG")
guides(fill=guide_legend(title="Proportion of State")) + ggtitle('State County Proportion per Cluster')
View(StateTable)
StateTable$Region <- 612L
StateTable$Region <- 0
for (i in 1:612) {
if StateTable$State[i] == 'AK' | 'CA' | 'HI' | 'NV' | 'OR' | 'WA' StateTable$Region =='Far West'
}
if (StateTable$State[i] == 'AK' | 'CA' | 'HI' | 'NV' | 'OR' | 'WA') StateTable$Region =='Far West'
if(StateTable$State == 'AK' | 'CA' | 'HI' | 'NV' | 'OR' | 'WA') StateTable$Region =='Far West'
StateTable$Region <- sapply(StateTable$State, function(x){
if(StateTable$State == 'AK' | 'CA' | 'HI' | 'NV' | 'OR' | 'WA'){
'Far West'
}
StateTable$Region <- sapply(StateTable$State, function(x){
if(StateTable$State == 'AK' | 'CA' | 'HI' | 'NV' | 'OR' | 'WA'){
'Far West'
})
StateTable$Region <- sapply(StateTable$State, function(x){
if(StateTable$State == 'AK' | 'CA' | 'HI' | 'NV' | 'OR' | 'WA'){
'Far West'
})
StateTable$Region <- sapply(StateTable$State, function(x){
if(StateTable$State == 'AK' | 'CA' | 'HI' | 'NV' | 'OR' | 'WA'){
'Far West'
}})
StateTable$Region <- sapply(StateTable$State, function(x){
if(StateTable$State == 'AK' | 'CA' | 'HI' | 'NV' | 'OR' | 'WA'){
'Far West'
}})
StateTable$Region <- sapply(StateTable$State, function(x){
if(StateTable$State == 'AK'|'CA'|'HI'|'NV'|'OR'|'WA'){
'Far West'
}})
StateTable$Region <- sapply(StateTable$State, function(x){
if(StateTable$State %in% c('AK','CA','HI','NV','OR','WA')){
'Far West'
}})
for (i in 1:612){
if(StateTable$State[i] %in% c('AK','CA','HI','NV','OR','WA')){
StateTable$Region == 'Far West'
}}
for (i in 1:612){
if(StateTable$State[i] %in% c('AK','CA','HI','NV','OR','WA')){
StateTable$Region == 'Far West'
} else {
if(StateTable$State[i] %in% c('CO','ID','MO','UT','WY')){
StateTable$Region == 'Rocky Mountain'
}}
}
for (i in 1:612){
if(StateTable$State[i] %in% c('AK','CA','HI','NV','OR','WA')){
StateTable$Region == 'Far West'
} else {
if(StateTable$State[i] %in% c('CO','ID','MO','UT','WY')){
StateTable$Region == 'Rocky Mountain'
}}
}
for (i in 1:612){
if(StateTable$State[i] == 'AK'|'CA'|'HI'|'NV'|'OR'|'WA'){
StateTable$Region == 'Far West'
} else {
if(StateTable$State[i] == 'CO'|'ID'|'MO'|'UT'|'WY'){
StateTable$Region == 'Rocky Mountain'
}}
}
for (i in 1:612){
if(StateTable$State[i] == "AK"|"CA"|"HI"|"NV"|"OR"|"WA"){
StateTable$Region == 'Far West'
}
for (i in 1:612){
if(StateTable$State[i] == "AK"|"CA"|"HI"|"NV"|"OR"|"WA"){
StateTable$Region == 'Far West'
} else {
if(StateTable$State[i] == 'CO'|'ID'|'MO'|'UT'|'WY'){
StateTable$Region == 'Rocky Mountain'
}}
}
for (i in 1:612){
if(StateTable$State[i] == "AK"|"CA"|"HI"|"NV"|"OR"|"WA"){
StateTable$Region == 'Far West'
} else {
if(StateTable$State[i] == 'CO'|'ID'|'MO'|'UT'|'WY'){
StateTable$Region == 'Rocky Mountain'
}}
}
for (i in 1:612){
if(as.integer(StateTable$State[i] %in% c('AK','CA','HI','NV','OR','WA'))){
StateTable$Region == 'Far West'
} else {
if(as.integer(StateTable$State[i] %in% c('CO','ID','MO','UT','WY'))){
StateTable$Region == 'Rocky Mountain'
}}
}
StateTable$Region <- 0
