labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency")
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..))) +
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency")
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..Perfomance..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency")
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..Performance..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency")
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..y..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency")
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency")
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency")+ scale_fill_manual(name = "Performance Level")
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency")
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + guide_legend(title="my awesome title")
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency")
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_x_continuous(ggtitle("New Plot Title"))
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE)
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(by = 1) +
scale_y_continuous(by = 1)
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(min(wid$y), max(wid$y), by = 1)) +
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(min(wid$y), max(wid$y), by = 1))
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(round(min(wid$y),1), round(max(wid$y),1), by = 1))
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(round(min(wid$y),0), round(max(wid$y),0), by = 1))
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(round(min(wid$y),0), round(max(wid$y),0), by = 1)) +
scale_y_continuous(breaks = seq(min(count), max(count), by = 1))
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(round(min(wid$y),0), round(max(wid$y),0), by = 1)) +
scale_y_continuous(breaks = by = 1))
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(round(min(wid$y),0), round(max(wid$y),0), by = 1)) +
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(round(min(wid$y),0), round(max(wid$y),0), by = 1))
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(round(min(wid$y),0), round(max(wid$y),0), by = 1)) +
scale_y_continuous(breaks = seq(0:15), by = 1))
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(round(min(wid$y),0), round(max(wid$y),0), by = 1)) +
scale_y_continuous(breaks = seq(0:15), by = 1)
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(round(min(wid$y),0), round(max(wid$y),0), by = 1)) +
scale_y_continuous(breaks = seq(0:15)
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(round(min(wid$y),0), round(max(wid$y),0), by = 1)) +
scale_y_continuous(breaks = seq(0:15)
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(round(min(wid$y),0), round(max(wid$y),0), by = 1)) +
scale_y_continuous(breaks = seq(0:15))
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(round(min(wid$y),0), round(max(wid$y),0), by = 1)) +
scale_y_continuous(breaks = seq(-1:16))
ploty
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(round(min(wid$y),0), round(max(wid$y),0), by = 1)) +
scale_y_continuous(breaks = seq(0:15))
ploty
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/GitHub/MMSS_311_2")
wid <- read.csv("/Users/aaroncoates/Downloads/widget_data.csv")
library(dplyr)
library(ggplot2)
library(glmnet)
library(broom)
library(aod)
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(round(min(wid$y),0), round(max(wid$y),0), by = 1)) +
scale_y_continuous(breaks = seq(0:15))
ploty
grid=10^seq(2,-2,length=100)
ridge <- glmnet(x = as.matrix(wid[, -1]), y = wid$y, alpha=0, lambda=grid)
ridge1 <- tidy(ridge)
ggplot(data=ridge1, aes(x=log10(lambda), y=estimate, colour=term)) +
geom_line() + labs(title ="Ridge Coefficients",
x = "Log(Lambda)", y = "Coefficient Estimate") +
coord_cartesian(xlim = c(-2,2), ylim = c(-1, 1))
crossval <- cv.glmnet(x = as.matrix(wid[, -1]), y = wid$y, alpha=0, lambda=grid)
plot(crossval)
crossval$lambda.min
coef(crossval, s = "lambda.min")
grid=10^seq(2,-2,length=100)
lasso <- glmnet(x = as.matrix(wid[, -1]), y = wid$y, alpha=1, lambda=grid)
lasso1 <- tidy(lasso)
ggplot(data=lasso1, aes(x=lambda, y=estimate, colour=term)) +
geom_line() + coord_cartesian(xlim = c(0,2), ylim = c(-1, 1)) +
labs(title ="LASSO Coefficients", x = "Lambda", y = "Coefficient Estimate")
ggplot(data=lasso1, aes(x=lambda, y=estimate, colour=term)) +
geom_line() + coord_cartesian(xlim = c(0,.5), ylim = c(-.5, .5)) +
labs(title ="LASSO Coefficients", x = "Lambda", y = "Coefficient Estimate")
crossvallasso <- cv.glmnet(x = as.matrix(wid[, -1]), y = wid$y, alpha=1, lambda=grid)
plot(crossvallasso)
crossvallasso$lambda.min
coef(crossvallasso, s = "lambda.min")
ggplot(data=ridge1, aes(x=log10(lambda), y=estimate, colour=term)) +
geom_line() + labs(title ="Ridge Coefficients",
x = "Log(Lambda)", y = "Coefficient Estimate") +
coord_cartesian(xlim = c(-2,2), ylim = c(-1, 1))
crossval$lambda.min
coef(crossval, s = "lambda.min")
crossvallasso$lambda.min
coef(crossvallasso, s = "lambda.min")
crossvallasso$lambda.min
coef(crossvallasso, s = "lambda.min")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/GitHub/MMSS_311_2")
wid <- read.csv("/Users/aaroncoates/Downloads/widget_data.csv")
library(dplyr)
library(ggplot2)
library(glmnet)
library(broom)
library(aod)
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(round(min(wid$y),0), round(max(wid$y),0), by = 1)) +
scale_y_continuous(breaks = seq(0:15))
ploty
grid=10^seq(2,-2,length=100)
ridge <- glmnet(x = as.matrix(wid[, -1]), y = wid$y, alpha=0, lambda=grid)
ridge1 <- tidy(ridge)
ggplot(data=ridge1, aes(x=log10(lambda), y=estimate, colour=term)) +
geom_line() + labs(title ="Ridge Coefficients",
x = "Log(Lambda)", y = "Coefficient Estimate") +
coord_cartesian(xlim = c(-2,2), ylim = c(-1, 1))
crossval <- cv.glmnet(x = as.matrix(wid[, -1]), y = wid$y, alpha=0, lambda=grid)
crossval <- cv.glmnet(x = as.matrix(wid[, -1]), y = wid$y, alpha=0, lambda=grid)
plot(crossval)
crossval$lambda.min
coef(crossval, s = "lambda.min")
crossval$lambda.min
coef(crossval, s = "lambda.min")
grid=10^seq(2,-2,length=100)
lasso <- glmnet(x = as.matrix(wid[, -1]), y = wid$y, alpha=1, lambda=grid)
lasso1 <- tidy(lasso)
ggplot(data=lasso1, aes(x=lambda, y=estimate, colour=term)) +
geom_line() + coord_cartesian(xlim = c(0,2), ylim = c(-1, 1)) +
labs(title ="LASSO Coefficients", x = "Lambda", y = "Coefficient Estimate")
ggplot(data=lasso1, aes(x=lambda, y=estimate, colour=term)) +
geom_line() + coord_cartesian(xlim = c(0,.5), ylim = c(-.5, .5)) +
labs(title ="LASSO Coefficients", x = "Lambda", y = "Coefficient Estimate")
crossvallasso <- cv.glmnet(x = as.matrix(wid[, -1]), y = wid$y, alpha=1, lambda=grid)
plot(crossvallasso)
crossvallasso$lambda.min
coef(crossvallasso, s = "lambda.min")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/GitHub/MMSS_311_2")
wid <- read.csv("/Users/aaroncoates/Downloads/widget_data.csv")
library(dplyr)
library(ggplot2)
library(glmnet)
library(broom)
library(aod)
ploty <- ggplot(wid, aes(y)) + geom_histogram(binwidth = 1, color="blue", aes(fill = ..x..)) +
labs(title ="Distribution of Widget Performance",
x = "Widget Performance", y = "Frequency") + scale_fill_continuous(guide=FALSE) +
scale_x_continuous(breaks = seq(round(min(wid$y),0), round(max(wid$y),0), by = 1)) +
scale_y_continuous(breaks = seq(0:15))
ploty
grid=10^seq(2,-2,length=100)
ridge <- glmnet(x = as.matrix(wid[, -1]), y = wid$y, alpha=0, lambda=grid)
ridge1 <- tidy(ridge)
ggplot(data=ridge1, aes(x=log10(lambda), y=estimate, colour=term)) +
geom_line() + labs(title ="Ridge Coefficients",
x = "Log(Lambda)", y = "Coefficient Estimate") +
coord_cartesian(xlim = c(-2,2), ylim = c(-1, 1))
crossval <- cv.glmnet(x = as.matrix(wid[, -1]), y = wid$y, alpha=0, lambda=grid)
plot(crossval)
crossval$lambda.min
coef(crossval, s = "lambda.min")
grid=10^seq(2,-2,length=100)
lasso <- glmnet(x = as.matrix(wid[, -1]), y = wid$y, alpha=1, lambda=grid)
lasso1 <- tidy(lasso)
ggplot(data=lasso1, aes(x=lambda, y=estimate, colour=term)) +
geom_line() + coord_cartesian(xlim = c(0,2), ylim = c(-1, 1)) +
labs(title ="LASSO Coefficients", x = "Lambda", y = "Coefficient Estimate")
ggplot(data=lasso1, aes(x=lambda, y=estimate, colour=term)) +
geom_line() + coord_cartesian(xlim = c(0,.5), ylim = c(-.5, .5)) +
labs(title ="LASSO Coefficients", x = "Lambda", y = "Coefficient Estimate")
crossvallasso <- cv.glmnet(x = as.matrix(wid[, -1]), y = wid$y, alpha=1, lambda=grid)
plot(crossvallasso)
crossvallasso$lambda.min
coef(crossvallasso, s = "lambda.min")
knitr::opts_chunk$set(echo = TRUE)
naive <- naiveBayes(group ~ pol_margin + col_degree + house_income, data=trainingdata)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/GitHub/MMSS_311_2")
pol <- read.csv("/Users/aaroncoates/Downloads/pol_data.csv")
library(broom)
library(e1071)
library(caret)
pol$group <- as.factor(pol$group)
trainsize <- floor((2/3)*nrow(pol))
set.seed(100)
train_pol <- sample(nrow(pol), size = trainsize, replace=FALSE)
trainingdata <- pol[train_pol, ]
testydata <- pol[-train_pol, ]
tunez <- tune(svm, group ~ pol_margin + col_degree + house_income,
data=trainingdata, kernel = "linear",
ranges = list(cost = c(0.001, 0.01, 0.1, 1, 5, 10, 100)))
swaggysvm <- tunez$best.model
summary(swaggysvm)
svmpredict <- predict(swaggysvm, testydata)
svmtable <- table("Prediction"=svmpredict, "True Party"=testydata[,1])
svmtable
naive <- naiveBayes(group ~ pol_margin + col_degree + house_income, data=trainingdata)
naivetidy <- tidy(naive)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/GitHub/MMSS_311_2")
pol <- read.csv("/Users/aaroncoates/Downloads/pol_data.csv")
library(broom)
library(e1071)
library(caret)
pol$group <- as.factor(pol$group)
trainsize <- floor((2/3)*nrow(pol))
set.seed(100)
train_pol <- sample(nrow(pol), size = trainsize, replace=FALSE)
trainingdata <- pol[train_pol, ]
testydata <- pol[-train_pol, ]
tunez <- tune(svm, group ~ pol_margin + col_degree + house_income,
data=trainingdata, kernel = "linear",
ranges = list(cost = c(0.001, 0.01, 0.1, 1, 5, 10, 100)))
swaggysvm <- tunez$best.model
summary(swaggysvm)
svmpredict <- predict(swaggysvm, testydata)
svmtable <- table("Prediction"=svmpredict, "True Party"=testydata[,1])
svmtable
naive <- naiveBayes(group ~ pol_margin + col_degree + house_income, data=trainingdata)
naivepred <- predict(naive, testydata)
naivetable <- table("Prediction"=naivepred, "True Party"=testydata[,1])
naivetable
View(naive)
View(naive)
read.csv("/Users/aaroncoates/Downloads/reports.csv")
CSV <- read.csv("/Users/aaroncoates/Downloads/reports.csv")
View(CSV)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/GitHub/MMSS_311_2")
TwitterData <- read.csv('/Users/aaroncoates/Downloads/trumptweets.csv')
library(tidytext)
library(tm)
library(dplyr)
library(broom)
library(lubridate)
library(stringr)
library(ggplot2)
library(tidyr)
View(TwitterData)
CSV <- read.csv("/Users/aaroncoates/Downloads/CPDS-1960-2016-Update-2018.xlsx")
CSV <- read.csv("/Users/aaroncoates/Downloads/CPDS-1960-2016-Update-2018.xlsx")
CSV <- read.csv("/Users/aaroncoates/Downloads/500_Cities__City-level_Data__GIS_Friendly_Format___2018_release.csv")
View(CSV)
setwd("~/Documents/GitHub/MMSS_311_2")
library(tidytext)
library(tm)
library(readr)
library(dplyr)
library(stringr)
library(ggplot2)
library(proxy)
library(fields)
manifestos <- read_csv("/Users/aaroncoates/Downloads/manifestos.csv")
tidymani <- manifestos %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
mutate(word = removeNumbers(word)) %>%
mutate(word = stripWhitespace(word)) %>%
mutate(word = removePunctuation(word)) %>%
mutate(word = stemDocument(word)) %>%
group_by(doc_id) %>%
count(word) %>%
subset(word != '') %>%
cast_dtm(doc_id, word, n) %>%
removeSparseTerms(0.99) %>%
as.matrix()
eucdist.mani <- dist(tidymani) %>%
as.matrix()
manifestosabc <- manifestos[order(manifestos$doc_id),]
image.plot(1:ncol(eucdist.mani), 1:ncol(eucdist.mani), eucdist.mani, axes=F, xlab="Party", ylab="Party")
axis(1, 1:ncol(eucdist.mani), manifestosabc$doc_id, cex.axis=.7, las=2)
axis(2, 1:ncol(eucdist.mani), manifestosabc$doc_id, cex.axis=.7, las=2)
cosdist.mani <- dist(tidymani, method="cosine") %>%
as.matrix()
image.plot(1:ncol(cosdist.mani), 1:ncol(cosdist.mani), cosdist.mani, axes=F, xlab="Party", ylab="Party")
axis(1, 1:ncol(cosdist.mani), manifestosabc$doc_id, cex.axis=.7, las=2)
axis(2, 1:ncol(cosdist.mani), manifestosabc$doc_id, cex.axis=.7, las=2)
sanny <- read_csv("/Users/aaroncoates/Downloads/311_sanitation_requests_2019.csv")
sanny <- sanny[!is.na(sanny$Latitude), ]
sanny <- sanny[!is.na(sanny$Longitude), ]
set.seed(80)
kmeanmat<- kmeans(select(sanny, c(Latitude, Longitude)), 2, nstart=50)
clusty <- kmeanmat$cluster
sanny$cluster <- as.factor(clusty)
table(sanny$`Borough`, sanny$cluster)
ggplot(sanny, aes(x=Latitude, y=Longitude)) + geom_point(alpha=.1, size=.5, col= sanny$cluster)
centroidz <- as.data.frame(kmeanmat$centers)
ggplot(sanny, aes(x=Latitude, y=Longitude, color=sanny$cluster)) + geom_point(alpha=.1, size=.5) +
scale_color_manual(values=c("#E0A4FF", "#1FD0FA"), guide=FALSE) +
geom_point(data=centroidz, aes(Latitude, Longitude), color='white', size=5) +
geom_point(data=centroidz, aes(Latitude, Longitude), color='black', size=4) +
theme_bw()
kmeanmat3 <- kmeans(select(sanny, c(Latitude, Longitude)), 3, nstart=50)
clusty3 <- kmeanmat3$cluster
sanny$cluster3 <- as.factor(clusty3)
table(sanny$`Borough`, sanny$cluster3)
ggplot(sanny, aes(x=Latitude, y=Longitude)) + geom_point(alpha=.1, size=.5, col= sanny$cluster3)
centroidz3 <- as.data.frame(kmeanmat3$centers)
ggplot(sanny, aes(x=Latitude, y=Longitude, color=sanny$cluster3)) + geom_point(alpha=.1, size=.5) +
scale_color_manual(values=c("#5FEE62", "#1FD0FA", "#F06ED6"), guide=FALSE) +
geom_point(data=centroidz3, aes(Latitude, Longitude), color='white', size=5) +
geom_point(data=centroidz3, aes(Latitude, Longitude), color='black', size=4) +
theme_bw()
sumsq <- numeric(15)
for (i in 1:15){
km <- kmeans(select(sanny, c(Latitude, Longitude)), i, nstart=15)
sanny[[paste0("k", i)]] <- as.factor(km$cluster)
sumsq[i] <- km$tot.withinss
}
sumsq<- as.data.frame(sumsq)
sumsq$k <- c(1:15)
ggplot(sumsq, aes(k, sumsq)) + geom_line() + geom_point()
table(sanny$Borough, sanny$k4)
kmeanmat4 <- kmeans(select(sanny, c(Latitude, Longitude)), 4, nstart=50)
clusty4 <- kmeanmat4$cluster
sanny$cluster4 <- as.factor(clusty4)
centroidz4 <- as.data.frame(kmeanmat4$centers)
ggplot(sanny, aes(x=Latitude, y=Longitude, color=sanny$cluster4)) + geom_point(alpha=.1, size=.5) +
scale_color_manual(values=c("#5FEE62", "#1FD0FA", "#F06ED6", "#FFC034"), guide=FALSE) +
geom_point(data=centroidz4, aes(Latitude, Longitude), color='white', size=3) +
geom_point(data=centroidz4, aes(Latitude, Longitude), color='black', size=2) +
theme_bw()
library(mixtools)
final <- sanny[sample(1:nrow(sanny), 500, replace=FALSE),]
plot(mvnormalmixEM(select(final, c(Latitude, Longitude)), k=3), whichplots=2, xlab2="Latitude", ylab2="Longitude", pch = 16)
View(final)
plot(mvnormalmixEM(select(final, c(Latitude, Longitude)), k=2), whichplots=2, xlab2="Latitude", ylab2="Longitude")
plot(mvnormalmixEM(select(final, c(Latitude, Longitude)), k=2), whichplots=2, xlab2="Latitude", ylab2="Longitude")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/GitHub/MMSS_311_2")
library(tidytext)
library(tm)
library(readr)
library(dplyr)
library(stringr)
library(ggplot2)
library(proxy)
library(fields)
library(mixtools)
manifestos <- read_csv("/Users/aaroncoates/Downloads/manifestos.csv")
tidymani <- manifestos %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
mutate(word = removeNumbers(word)) %>%
mutate(word = stripWhitespace(word)) %>%
mutate(word = removePunctuation(word)) %>%
mutate(word = stemDocument(word)) %>%
group_by(doc_id) %>%
count(word) %>%
subset(word != '') %>%
cast_dtm(doc_id, word, n) %>%
removeSparseTerms(0.99) %>%
as.matrix()
eucdist.mani <- dist(tidymani) %>%
as.matrix()
eucdist.mani <- dist(tidymani) %>%
as.matrix()
eucdist.mani
eucdist.mani <- dist(tidymani) %>%
as.matrix()
eucdist.mani
manifestosabc <- manifestos[order(manifestos$doc_id),]
image.plot(1:ncol(eucdist.mani), 1:ncol(eucdist.mani), eucdist.mani, axes=F, xlab="Party", ylab="Party")
axis(1, 1:ncol(eucdist.mani), manifestosabc$doc_id, cex.axis=.7, las=2)
axis(2, 1:ncol(eucdist.mani), manifestosabc$doc_id, cex.axis=.7, las=2)
cosdist.mani <- dist(tidymani, method="cosine") %>%
as.matrix()
cosdist.mani <- dist(tidymani, method="cosine") %>%
as.matrix()
cosdist.mani
image.plot(1:ncol(cosdist.mani), 1:ncol(cosdist.mani), cosdist.mani, axes=F, xlab="Party", ylab="Party")
axis(1, 1:ncol(cosdist.mani), manifestosabc$doc_id, cex.axis=.7, las=2)
axis(2, 1:ncol(cosdist.mani), manifestosabc$doc_id, cex.axis=.7, las=2)
sanny <- read_csv("/Users/aaroncoates/Downloads/311_sanitation_requests_2019.csv")
sanny <- sanny[!is.na(sanny$Latitude), ]
sanny <- sanny[!is.na(sanny$Longitude), ]
set.seed(80)
kmeanmat<- kmeans(select(sanny, c(Latitude, Longitude)), 2, nstart=50)
clusty <- kmeanmat$cluster
sanny$cluster <- as.factor(clusty)
table(sanny$`Borough`, sanny$cluster)
ggplot(sanny, aes(x=Latitude, y=Longitude)) + geom_point(alpha=.1, size=.5, col= sanny$cluster)
centroidz <- as.data.frame(kmeanmat$centers)
ggplot(sanny, aes(x=Latitude, y=Longitude, color=sanny$cluster)) + geom_point(alpha=.1, size=.5) +
scale_color_manual(values=c("#E0A4FF", "#1FD0FA"), guide=FALSE) +
geom_point(data=centroidz, aes(Latitude, Longitude), color='white', size=5) +
geom_point(data=centroidz, aes(Latitude, Longitude), color='black', size=4) +
theme_bw()
kmeanmat3 <- kmeans(select(sanny, c(Latitude, Longitude)), 3, nstart=50)
clusty3 <- kmeanmat3$cluster
sanny$cluster3 <- as.factor(clusty3)
table(sanny$`Borough`, sanny$cluster3)
ggplot(sanny, aes(x=Latitude, y=Longitude)) + geom_point(alpha=.1, size=.5, col= sanny$cluster3)
centroidz3 <- as.data.frame(kmeanmat3$centers)
ggplot(sanny, aes(x=Latitude, y=Longitude, color=sanny$cluster3)) + geom_point(alpha=.1, size=.5) +
scale_color_manual(values=c("#5FEE62", "#1FD0FA", "#F06ED6"), guide=FALSE) +
geom_point(data=centroidz3, aes(Latitude, Longitude), color='white', size=5) +
geom_point(data=centroidz3, aes(Latitude, Longitude), color='black', size=4) +
theme_bw()
ggplot(sanny, aes(x=Latitude, y=Longitude, color=sanny$cluster3)) + geom_point(alpha=.1, size=.5) +
scale_color_manual(values=c("#5FEE62", "#1FD0FA", "#F06ED6"), guide=FALSE) +
geom_point(data=centroidz3, aes(Latitude, Longitude), color='white', size=4) +
geom_point(data=centroidz3, aes(Latitude, Longitude), color='black', size=3) +
theme_bw()
sumsq <- numeric(15)
for (i in 1:15){
km <- kmeans(select(sanny, c(Latitude, Longitude)), i, nstart=15)
sanny[[paste0("k", i)]] <- as.factor(km$cluster)
sumsq[i] <- km$tot.withinss
}
sumsq<- as.data.frame(sumsq)
sumsq$k <- c(1:15)
ggplot(sumsq, aes(k, sumsq)) + geom_line() + geom_point()
ggplot(sumsq, aes(k, sumsq)) + geom_line() + geom_point() + ggtitle("Elbow Plot") + xlab("Number of Clusters") + ylab("Within-Cluster SS")
ggplot(sumsq, aes(k, sumsq)) + geom_line() + geom_point() + ggtitle("Elbow Plot") + xlab("Number of Clusters") + ylab("Within-Cluster Sum of Squares")
kmeanmat4 <- kmeans(select(sanny, c(Latitude, Longitude)), 4, nstart=50)
clusty4 <- kmeanmat4$cluster
sanny$cluster4 <- as.factor(clusty4)
centroidz4 <- as.data.frame(kmeanmat4$centers)
ggplot(sanny, aes(x=Latitude, y=Longitude, color=sanny$cluster4)) + geom_point(alpha=.1, size=.5) +
scale_color_manual(values=c("#5FEE62", "#1FD0FA", "#F06ED6", "#FFC034"), guide=FALSE) +
geom_point(data=centroidz4, aes(Latitude, Longitude), color='white', size=3) +
geom_point(data=centroidz4, aes(Latitude, Longitude), color='black', size=2) +
theme_bw()
final <- sanny[sample(1:nrow(sanny), 500, replace=FALSE),]
plot(mvnormalmixEM(select(final, c(Latitude, Longitude)), k=2), whichplots=2, xlab2="Latitude", ylab2="Longitude")
plot(mvnormalmixEM(select(final, c(Latitude, Longitude)), k=3), whichplots=2, xlab2="Latitude", ylab2="Longitude")
ggplot(sanny, aes(x=Latitude, y=Longitude)) + geom_point(alpha=.1, size=.5, col= sanny$cluster3)
