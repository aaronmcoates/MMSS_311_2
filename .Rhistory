odev <- function(x){
ifelse(round(x, digits=0) - x!=0, "Not an integer", ifelse(round(x/2, digits=0) - x/2 != 0, "Odd", "Even"))
}
odev(1)
odev(1.5)
odev(2)
hey <- function(x){
if(round(x, digits=0) - x!=0){
print("Not an Integer!")
} else if(round(x/2, digits=0) - (x/2) != 0) {
print("Odd")
} else {
print("Even")
}}
hey(1)
hey(2)
hey(3.5)
hey <- function(x){
if(round(x, digits=0) - x!=0){
print("Not an Integer!")
} else if(round(x/2, digits=0) - (x/2) != 0) {
print("Odd")
} else {
print("Even")
}}
hey(5)
hey(62)
hey(34.5)
odev <- function(x){
ifelse(round(x, digits=0) - x!=0, "Not an integer", ifelse(round(x/2, digits=0) - x/2 != 0, "Odd", "Even"))
}
odev(11)
odev(103.5)
odev(26)
vecky <- vector(1:6)
slayme <- vector(sample(vecky, 20, replace = TRUE))
vecky <- c(1:6)
slayme <- vector(sample(vecky, 20, replace = TRUE))
vecky <- c(1:6)
slayme <- c(sample(vecky, 20, replace = TRUE))
vecky <- c(1:6)
slayme <- c(sample(vecky, 20, replace = TRUE))
final <- sapply(slayme,
function(x){
if(round(x/2, digits=0) - (x/2) != 0){
2x
} else {
x^2
}})
final <- sapply(slayme,
function(x){
if(round(x/2, digits=0) - x/2 != 0){
2 * x
} else {
x^2
}})
print("Odd")
slayme
final
setwd("~/Documents/GitHub/MMSS_311_2")
#1
odev <- function(x){
ifelse(round(x, digits=0) - x!=0, "Not an integer", ifelse(round(x/2, digits=0) - x/2 != 0, "Odd", "Even"))
}
odev(11)
odev(103.5)
odev(26)
hey <- function(x){
if(round(x, digits=0) - x!=0){
print("Not an Integer!")
} else if(round(x/2, digits=0) - (x/2) != 0) {
print("Odd")
} else {
print("Even")
}}
hey(5)
hey(62)
hey(34.5)
library(dplyr)
load(starwars)
head(starwars)
library(dplyr)
load("starwars")
head(starwars)
library(dplyr)
data("starwars")
head(starwars)
print(dim(starwars))
View(starwars)
mean(starwars$mass, na.rm=TRUE)
mean(starwars$mass)
mean(starwars$mass[eye_color=="blue"[160 < height & 200 > height]])
mean(starwars$mass[starwars$eye_color=="blue"[160 < starwars$height & 200 > starwars$height]])
mean(starwars$mass[starwars$eye_color=="blue" & 160 < starwars$height & 200 > starwars$height])
mean(starwars$mass[starwars$eye_color=="blue" & 160 < starwars$height & 200 > starwars$height], na.rm=TRUE)
starwarz <- starwars[starwars$eye_color=="blue" & 160 < starwars$height & 200 > starwars$height]
starwarz <- starwars[ which(starwars$eye_color=="blue" & 160 < starwars$height & 200 > starwars$height)]
starwarz <- starwars[ which(starwars$eye_color=="blue" & 160 < starwars$height & 200 > starwars$height) ]
starwarz <- subset(starwars, starwars$eye_color=="blue" & 160 < starwars$height & 200 > starwars$height)
View(starwarz)
newstars <- subset(starwars, select = c(name, height, mass, gender, species))
plot(mass, height)
plot(newstars$mass, newstars$height)
OutVals = boxplot(newstars$mass)$out
which(x %in% OutVals)
OutVals = boxplot(newstars$mass)$out
which(newstars$mass %in% OutVals)
View(newstars)
newstars2 <- newstars[-16]
newstars2 <- newstars[-c(16)]
newstars2 <- newstars[-c(16),]
regression <- lm(mass ~ height)
regression <- lm(newstars2$mass ~ newstars2$height)
summary(regression)
predict(regression, newstars2$height==180)
predict(regression, newstars2$height=180)
predict(regression, newstars2$height)
predict(regression, newstars2(height=180))
predict(regression, newdata = newstars2(height=180))
newinput= data.frame(newstars$height = 180)
predict(regression, newdata = newinput)
newinpu <- data.frame(newstars$height = 180)
predict(regression, newdata = newinput)
newinput <- data.frame(newstars$height = c(180))
predict(regression, newdata = newinput)
predict(regression, newstars2$height = c(160))
newstars2 <- newstars[-c(16),]
regression <- lm(newstars2$mass ~ newstars2$height)
summary(regression)
predict(regression, newstars2$height = c(160))
predict(regression, data.frame(newstars2$height = c(160)))
predict(regression, data.frame(height = c(160)))
predict(regression, data.frame(height = c(180)))
predict(regression, data.frame(newstars2$height = c(180)))
predict(regression, data.frame(newstars2$height))
predict(regression, data.frame(newstars2$height = c(179, 180, 181)))
y <- newstars2$mass
x <- newstars2$height
reg <- lm(y ~ x)
predict(reg, data.frame(x = 180))
